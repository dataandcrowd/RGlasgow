---
title: "R in Geospatial Analysis:"
subtitle: "Building Spatially Interpolated Air Pollution Field"
institute: "MRC/CSO Social and Public Health Sciences Unit, University of Glasgow"
author: "Dr. Hyesop Shin"
date: "2023-09-06"
footer: "[ðŸ”— dataandcrowd.github.io/RGlasgow](https://dataandcrowd.github.io/RGlasgow)"
logo: "images/logo.png"
format:
  revealjs:
    theme: style/slides.scss
    transition: fade
    slide-number: true
    chalkboard: true
editor: source
execute:
  freeze: auto
  echo: true
---

```{r}
#| label: setup
#| include: false

# set width of code output
options(width = 65)

# load background packages
#library(countdown)
```

# About Myself

## I am a Geographer Interested in...

::: columns
::: {.column width="50%"}
#### Interests {style="color: orange;"}

-   Transport and Health
-   Air Pollution
-   Population Mobility
-   Citizen Science
-   Children's Physcial Activity
:::

::: {.column width="50%"}
#### Techniques {style="color: green;"}

-   Geospatial analysis
-   Agent-based modelling (ABM)
-   HPC: Cloud-based computing
-   Crowdsourcing
-   GPS and Mobility
:::
:::

<br>

#### Tools:

![](images/tools.png){.absolute top="510" left="150" width="500" height="60"}

```{=html}
<!----------------------------
left for blank


-->
```
# Context

## Facts about NO2 Exposure: Did you know?

![](images/slide1.png)

## Methods to estimate 'Population Exposure'

literature review

## Methods to estimate 'Population Exposure'

::: columns
::: {.column width="50%"}
#### Geostatistical Modelling {style="color: orange;"}

-   Statistical properties of the observations (e.g. Kriging)
-   Pros: Mathematically sound concept, quick implementation speed, easy data aggregation, and useful software
-   Cons: Artefacts, Not fully addressing small-scale variation, smoothed (no emission)
:::

::: {.column width="50%"}
#### Atmospheric Modelling {style="color: green;"}

-   Mathematical assumptions to measure the impact of emission of atmosphere (e.g. CALPUFF)
-   Pros: Consider Meteorological Impact
-   Cons: Long execution, Requires lots of computational power and learning curve, Aggregated Measure, Multiple software
:::
:::

## Methods to estimate 'Population Exposure'

::: columns
::: {.column width="50%"}
#### Geostatistical Modelling {style="color: orange;"}

-   Statistical properties of the observations (e.g. Kriging)
-   Pros: Mathematically sound concept, quick implementation speed, easy data aggregation, and useful software
-   Cons: Artefacts, Not fully addressing small-scale variation, smoothed (no emission)
:::

::: {.column width="50%"}
<br>

#### Given we have a temporally rich but spatially poor pollution data, why don't we start from a computationally light, reproducible, and mathematically sound model? {style="color: CornflowerBlue;"}
:::
:::

## Objective

To develop an air pollution package in R that allows anyone to easily generate a pollution map

<p style="font-size:25px; margin-top: 2em;">

To examine small-scale variations that occur during SI prediction <br> To introduce a new road-scale spatial interpolation method that employs road weighting

</p>

## Roadmap

![](images/flow.png)

<img src="images/rpackages.png" width="50%" height="50%"/>


## Modelling with Universal Kriging {.scrollable}

Considering Small-scale Variability is needed =\> build a *semivariogram*

::: {.fragment}
"**Closer things** are more predictable and have less variability. While **distant things** are less predictable and are less related".
:::

::: {.fragment}
For example, the air quality one meter ahead of you is more likely to be similar than 100 meters away.
:::

::: {.fragment}
To build a semivariogram, always remember we are looking at **all distances** between 2 samples and their **variability**
:::

![](images/semivariogram_concept.png)

![](images/study-points-specific.png)


## Modelling with Universal Kriging 

Since NO~2~ varies substantially between nearby stations, it might be difficult to get a perfect empirical semivariogram. ["AutoKrige"]{style="color:red;"} in the `automap` package might help us find near to the goodness-of-fit.

![](images/semivariogram.png)


## Our turn {.smaller}

::: task
Let's build a presentation together from `hello-penguins-slides.qmd` and showcase the following features of Quarto presentations:

-   Hierarchy, headers, and document outline

-   Incremental lists

-   Columns and tabsets

-   Code, output location, code highlighting

-   Logo and footer

-   Making things fit on a slide

-   Chalkboard

-   Multiplex

-   Publishing your presentation to Quarto Pub
:::

## Your turn

::: task
Pick up where we left off and

-   Change the [transition style](https://quarto.org/docs/presentations/revealjs/advanced.html#slide-transitions) between slides

-   Change the [slide size](https://quarto.org/docs/presentations/revealjs/advanced.html#presentation-size)

-   Add [slide numbers](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-numbers)
:::

```{r}
#| echo: false

#countdown(minutes = 5)
```

## Our turn

::: task
Let's continue building our a presentation together from `hello-penguins-slides.qmd` and showcase the following features of Quarto presentations:

-   Fragments

-   Title slide attributes

-   Speaker notes
:::

# Wrap up

## Quarto presentation formats

-   [`revealjs`](https://quarto.org/docs/presentations/revealjs) for HTML slides

    -   Essentially the replacement for `xaringan`, but with Pandoc-native syntax

-   [`beamer`](https://quarto.org/docs/presentations/beamer.html) for LaTeX slides

-   [PowerPoint](https://quarto.org/docs/presentations/powerpoint.html) for when you *have to* collaborate via MS Office

## Learn more

::: learn-more
[quarto.org/docs/presentations](https://quarto.org/docs/presentations)

```{=html}
<iframe src="https://quarto.org/docs/presentations/" width="100%" height="500" style="border:2px solid #123233;" title="Quarto Presentations"></iframe>
```
:::

## Questions

::: task
Any questions / anything you'd like to review before we wrap up this module?
:::
