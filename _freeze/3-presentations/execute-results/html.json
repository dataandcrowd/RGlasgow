{
  "hash": "059ae3205afc5f4222ecfbe839273dd5",
  "result": {
    "markdown": "---\ntitle: \"Innovative Modelling Techniques in R:\"\nsubtitle: \"Building Spatially Interpolated Air Pollution Field\"\ninstitute: \"SHW: University of Glasgow\"\nauthor: \"Dr. Hyesop Shin\"\ndate: \"2023-06-09\"\nfooter: \"[ðŸ”— dataandcrowd.github.io/RGlasgow](https://dataandcrowd.github.io/RGlasgow)\"\n#logo: \"../images/logo.png\"\nformat:\n  revealjs:\n    theme: style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Anatomy of a Quarto presentation\n\n## Components\n\n1.  Metadata: YAML\n\n2.  Text: Markdown\n\n3.  Code: Executed via `knitr` or `jupyter`\n\n. . .\n\n**Weave it all together**, and you have a beautiful, functional slide deck!\n\n## Our turn {.smaller}\n\n::: task\nLet's build a presentation together from `hello-penguins-slides.qmd` and showcase the following features of Quarto presentations:\n\n-   Hierarchy, headers, and document outline\n\n-   Incremental lists\n\n-   Columns and tabsets\n\n-   Code, output location, code highlighting\n\n-   Logo and footer\n\n-   Making things fit on a slide\n\n-   Chalkboard\n\n-   Multiplex\n\n-   Publishing your presentation to Quarto Pub\n:::\n\n## Your turn\n\n::: task\nPick up where we left off and\n\n-   Change the [transition style](https://quarto.org/docs/presentations/revealjs/advanced.html#slide-transitions) between slides\n\n-   Change the [slide size](https://quarto.org/docs/presentations/revealjs/advanced.html#presentation-size)\n\n-   Add [slide numbers](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-numbers)\n:::\n\n\n::: {.cell}\n\n:::\n\n\n## Our turn\n\n::: task\nLet's continue building our a presentation together from `hello-penguins-slides.qmd` and showcase the following features of Quarto presentations:\n\n-   Fragments\n\n-   Title slide attributes\n\n-   Speaker notes\n:::\n\n# Wrap up\n\n## Quarto presentation formats\n\n-   [`revealjs`](https://quarto.org/docs/presentations/revealjs) for HTML slides\n\n    -   Essentially the replacement for `xaringan`, but with Pandoc-native syntax\n\n-   [`beamer`](https://quarto.org/docs/presentations/beamer.html) for LaTeX slides\n\n-   [PowerPoint](https://quarto.org/docs/presentations/powerpoint.html) for when you *have to* collaborate via MS Office\n\n## Learn more\n\n::: learn-more\n[quarto.org/docs/presentations](https://quarto.org/docs/presentations)\n\n\n```{=html}\n<iframe src=\"https://quarto.org/docs/presentations/\" width=\"100%\" height=\"500\" style=\"border:2px solid #123233;\" title=\"Quarto Presentations\"></iframe>\n```\n\n:::\n\n## Questions\n\n::: task\nAny questions / anything you'd like to review before we wrap up this module?\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}