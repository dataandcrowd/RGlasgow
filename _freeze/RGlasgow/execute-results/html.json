{
  "hash": "6ebf004bb18031c7c2a96da0a03ddc51",
  "result": {
    "markdown": "---\ntitle: \"R in Geospatial Analysis:\"\nsubtitle: \"Building Spatially Interpolated Air Pollution Field\"\ninstitute: \"MRC/CSO Social and Public Health Sciences Unit, University of Glasgow\"\nauthor: \"Dr. Hyesop Shin\"\ndate: \"2023-09-06\"\nfooter: \"[üîó dataandcrowd.github.io/RGlasgow](https://dataandcrowd.github.io/RGlasgow)\"\nlogo: \"images/logo.png\"\nformat:\n  revealjs:\n    theme: style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: source\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# About Myself\n\n## I am a Geographer Interested in...\n\n::: columns\n::: {.column width=\"50%\"}\n#### Interests {style=\"color: orange;\"}\n\n-   Transport and Health\n-   Air Pollution\n-   Population Mobility\n-   Citizen Science\n-   Children's Physcial Activity\n:::\n\n::: {.column width=\"50%\"}\n#### Techniques {style=\"color: green;\"}\n\n-   Geospatial analysis\n-   Agent-based modelling (ABM)\n-   HPC: Cloud-based computing\n-   Crowdsourcing\n-   GPS and Mobility\n:::\n:::\n\n<br>\n\n#### Tools:\n\n![](images/tools.png){.absolute top=\"510\" left=\"150\" width=\"500\" height=\"60\"}\n\n\n```{=html}\n<!----------------------------\nleft for blank\n\n\n-->\n```\n\n# Context\n\n## Facts about NO2 Exposure: Did you know?\n\n![](images/slide1.png)\n\n## Methods to estimate 'Population Exposure'\n\n![](images/litreview.png)\n\n## Methods to estimate 'Population Exposure'\n\n::: columns\n::: {.column width=\"50%\"}\n#### Geostatistical Modelling {style=\"color: orange;\"}\n\n-   Statistical properties of the observations (e.g. Kriging)\n-   Pros: Mathematically sound concept, quick implementation speed, easy data aggregation, and useful software\n-   Cons: Artefacts, Not fully addressing small-scale variation, smoothed (no emission)\n:::\n\n::: {.column width=\"50%\"}\n#### Atmospheric Modelling {style=\"color: green;\"}\n\n-   Mathematical assumptions to measure the impact of emission of atmosphere (e.g. CALPUFF)\n-   Pros: Consider Meteorological Impact\n-   Cons: Long execution, Requires lots of computational power and learning curve, Aggregated Measure, Multiple software\n:::\n:::\n\n## Methods to estimate 'Population Exposure'\n\n::: columns\n::: {.column width=\"50%\"}\n#### Geostatistical Modelling {style=\"color: orange;\"}\n\n-   Statistical properties of the observations (e.g. Kriging)\n-   Pros: Mathematically sound concept, quick implementation speed, easy data aggregation, and useful software\n-   Cons: Artefacts, Not fully addressing small-scale variation, smoothed (no emission)\n:::\n\n::: {.column width=\"50%\"}\n<br>\n\n#### Given we have a temporally rich but spatially poor pollution data, why don't we start from a computationally light, reproducible, and mathematically sound model? {style=\"color: CornflowerBlue;\"}\n:::\n:::\n\n## Objective\n\nTo develop an air pollution package in R that allows anyone to easily generate a pollution map\n\n* To examine small-scale variations that occur during SI prediction\n* To introduce a new road-scale spatial interpolation method that employs road weighting\n\n# Method\n## Roadmap\n\n![](images/flow.png)\n\n<img src=\"images/rpackages.png\" width=\"50%\" height=\"50%\"/>\n\n\n## Modelling with Universal Kriging {.scrollable}\n\nConsidering Small-scale Variability is needed =\\> build a *semivariogram*\n\n::: {.fragment}\n\"**Closer things** are more predictable and have less variability. While **distant things** are less predictable and are less related\".\n:::\n\n::: {.fragment}\nFor example, the air quality one meter ahead of you is more likely to be similar than 100 meters away.\n:::\n\n::: {.fragment}\nTo build a semivariogram, always remember we are looking at **all distances** between 2 samples and their **variability**\n:::\n\n![](images/semivariogram_concept.png)\n\n![](images/study-points-specific.png)\n\n\n## Modelling with Universal Kriging \n\nSince NO~2~ varies substantially between nearby stations, it might be difficult to get a perfect empirical semivariogram.\n\n[\"AutoKrige\"]{style=\"color:red;\"} in the `automap` package might help us find near to the goodness-of-fit.\n\n![](images/semivariogram.png)\n\n<!-- <p style=\"font-size:20px; \"> Executed in R `gstats` package </p> -->\n\n## Daily Kriged Output...but too smoothed\n\n<br>\n\n![](images/kr_output.png)\n\n## Adding Road Weights\n<br>\n\n![](images/kr_road_concept.png)\n\n\n\n\n# Wrap up\n\n## Summary\n\n\n::: {.panel-tabset}\n\n### Modelling Population Exposure to Air Pollution\n\n- When modelling population exposure, accurate prediction of NO~2~ is key. \n- No golden rules for method choice, but for finer temporal intervals, you have to consider small-scale variability even more\n- Finer temporal population is helpful (e.g. Daytime/Nighttime Population)\n\n### Understanding the R Ecosystem is important for public use\n\n* Like other computer languages, R Ecosystem changes continuously. \n* Making the best use case is to add the road weight with the **‚Äúbig brothers‚Äù** e.g. `tibble`, `sf`, `dplyr`\n\n:::\n\n## Next Steps\n<br>\n\n![](images/package.png)\n\n\n\n## Thank You!\n- Email: hyesop.shin@glasgow.ac.uk\n- Twitter: @hyesop\n\n<br>\n\n#### Any questions or comments?\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}